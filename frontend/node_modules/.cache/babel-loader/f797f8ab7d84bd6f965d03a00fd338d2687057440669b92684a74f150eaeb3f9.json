{"ast":null,"code":"import axios from 'axios';\nimport { jwtDecode } from \"jwt-decode\";\nexport const BASE_URL = \"http://localhost:5000\";\nexport const axiosJWT = axios.create();\naxiosJWT.interceptors.request.use(async config => {\n  let token = localStorage.getItem(\"token\");\n  if (token) {\n    let decoded;\n    try {\n      decoded = jwtDecode(token);\n    } catch (e) {\n      console.error(\"Token tidak valid:\", e);\n      localStorage.removeItem(\"token\");\n      throw new Error(\"Token tidak valid\");\n    }\n    const currentDate = new Date();\n    if (decoded.exp * 1000 < currentDate.getTime()) {\n      try {\n        const response = await axios.get(`${BASE_URL}/token`);\n        token = response.data.accessToken;\n        localStorage.setItem(\"token\", token);\n      } catch (error) {\n        console.error(\"Gagal refresh token:\", error);\n        localStorage.removeItem(\"token\");\n        throw error;\n      }\n    }\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});","map":{"version":3,"names":["axios","jwtDecode","BASE_URL","axiosJWT","create","interceptors","request","use","config","token","localStorage","getItem","decoded","e","console","error","removeItem","Error","currentDate","Date","exp","getTime","response","get","data","accessToken","setItem","headers","Authorization","Promise","reject"],"sources":["C:/projekcc/frontend/src/utils.js"],"sourcesContent":["import axios from 'axios';\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\nexport const BASE_URL = \"http://localhost:5000\";\r\n\r\nexport const axiosJWT = axios.create();\r\n\r\naxiosJWT.interceptors.request.use(async (config) => {\r\n    let token = localStorage.getItem(\"token\");\r\n\r\n    if (token) {\r\n        let decoded;\r\n        try {\r\n            decoded = jwtDecode(token);\r\n        } catch (e) {\r\n            console.error(\"Token tidak valid:\", e);\r\n            localStorage.removeItem(\"token\");\r\n            throw new Error(\"Token tidak valid\");\r\n        }\r\n\r\n        const currentDate = new Date();\r\n\r\n        if (decoded.exp * 1000 < currentDate.getTime()) {\r\n            try {\r\n                const response = await axios.get(`${BASE_URL}/token`);\r\n                token = response.data.accessToken;\r\n                localStorage.setItem(\"token\", token);\r\n            } catch (error) {\r\n                console.error(\"Gagal refresh token:\", error);\r\n                localStorage.removeItem(\"token\");\r\n                throw error;\r\n            }\r\n        }\r\n\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n\r\n    return config;\r\n}, (error) => {\r\n    return Promise.reject(error);\r\n});\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,YAAY;AAEtC,OAAO,MAAMC,QAAQ,GAAG,uBAAuB;AAE/C,OAAO,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAM,CAAC,CAAC;AAEtCD,QAAQ,CAACE,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,MAAOC,MAAM,IAAK;EAChD,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAEzC,IAAIF,KAAK,EAAE;IACP,IAAIG,OAAO;IACX,IAAI;MACAA,OAAO,GAAGX,SAAS,CAACQ,KAAK,CAAC;IAC9B,CAAC,CAAC,OAAOI,CAAC,EAAE;MACRC,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEF,CAAC,CAAC;MACtCH,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;MAChC,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;IACxC;IAEA,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;IAE9B,IAAIP,OAAO,CAACQ,GAAG,GAAG,IAAI,GAAGF,WAAW,CAACG,OAAO,CAAC,CAAC,EAAE;MAC5C,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,GAAGrB,QAAQ,QAAQ,CAAC;QACrDO,KAAK,GAAGa,QAAQ,CAACE,IAAI,CAACC,WAAW;QACjCf,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAEjB,KAAK,CAAC;MACxC,CAAC,CAAC,OAAOM,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;QAChC,MAAMD,KAAK;MACf;IACJ;IAEAP,MAAM,CAACmB,OAAO,CAACC,aAAa,GAAG,UAAUnB,KAAK,EAAE;EACpD;EAEA,OAAOD,MAAM;AACjB,CAAC,EAAGO,KAAK,IAAK;EACV,OAAOc,OAAO,CAACC,MAAM,CAACf,KAAK,CAAC;AAChC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}